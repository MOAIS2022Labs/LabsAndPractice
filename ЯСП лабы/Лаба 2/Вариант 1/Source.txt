/*
Канатников Максим 9 группа
8. Создать класс Time для работы со временем в формате «час:минута:секунда». Класс
должен включать в себя не менее четырех способов инициализации: числами,
строкой (например, «23:59:59»), секундами, временем. Обязательными операциями
являются: вычисление разности между двумя моментами времени в секундах,
сложение времени и заданного количества секунд, вычитание из времени заданного
количества секунд, сравнение моментов времени, перевод в секунды, перевод
в минуты (с округлением до целой минуты).
*/


#include "Time.h"
#include <Windows.h>


void ConsoleInput(Time& time);

void FileInput(Time& time);

// действия над моментом времени
void Action(Time& time);

void ConsoleOutput(Time& time);

void FileOutput(Time& time);


int main()
{
	SetConsoleOutputCP(1251);
	Time time1, time2;
	int choice = 0;
	do
	{
		choice = InputMenu("Выберете откуда считывать первый момент времени");
		switch (choice)
		{
		case 1: // из консоли
			ConsoleInput(time1);
			break;
		case 2: // из файла
			FileInput(time1);
			time1.Display();
			break;
		}
		choice = InputMenu("\nВыберете откуда считывать второй момент времени");
		switch (choice)
		{
		case 1: // из консоли
			ConsoleInput(time2);
			break;
		case 2: // из файла
			FileInput(time2);
			time2.Display();
			break;
		}
		

		int choice2 = 0;
		do
		{
			choice2 = OperationChoice();
			switch (choice2)
			{
			case 1:
			{
				Time res = time1 + time2;
				res.Display();
				break;
			}
			case 2:
			{
				try
				{
					Time res = time1 - time2;
					res.Display();
				}
				catch (std::exception ex)
				{
					std::cout << ex.what();
				}
				break;
			}
			case 3:
				std::cout << (time1 == time2) << '\n';
				break;
			case 4:
				std::cout << (time1 != time2) << '\n';
				break;
			case 5:
				std::cout << (time1 > time2) << '\n';
				break;
			case 6:
				std::cout << (time1 < time2) << '\n';
				break;
			case 7:
				std::cout << (time1 >= time2) << '\n';
				break;
			case 8:
				std::cout << (time1 <= time2) << '\n';
				break;
			case 9:
				std::cout << time1.Difference(time2) << '\n';
				break;
			}
	} while (choice2 != 0);
	std::cout << "Закончить? (y/n)\n";
	char c;
	std::cin >> c;
	if (c == 'y' || c == 'Y')
		choice = 0;
	} while (choice != 0);

	choice = 1;

	do
	{
		choice = InizializationMenu();
		switch (choice)
		{
		case 1: // числами
		{
			uint hour, minute, second;
			ReadAndCheck(hour, "Введите часы: ", 0, 23);
			ReadAndCheck(minute, "Введите минуты: ", 0, 59);
			ReadAndCheck(second, "Введите секунды: ", 0, 59);
			Time time(hour, minute, second);
			Action(time);
			break;
		}
		case 2: // строкой
		{
			std::string str;
			ReadAndCheck(str, "Введите время в строковом формате: ");
			Time time(str);
			Action(time);
			break;
		}
		case 3: // секундами
		{
			uint sec;
			ReadAndCheck(sec, "Введите секунды: ", 0, 85399);
			Time time(sec);
			Action(time);
			break;
		}
		case 4: // временем
			uint hour, minute, second;
			ReadAndCheck(hour, "Введите часы: ", 0, 23);
			ReadAndCheck(minute, "Введите минуты: ", 0, 59);
			ReadAndCheck(second, "Введите секунды: ", 0, 59);
			tm t{ second, minute, hour };
			Time time(t);
			Action(time);
			break;
		}
	} while (choice != 0);
	return 0;
}


void ConsoleInput(Time& time)
{
	time.Read();
}

void FileInput(Time& time)
{
	std::cout << "Введите имя файла: ";
	std::string fname;
	std::cin >> fname;
	while (!CheckFile(fname))
	{
		std::cout << "Данные не были считаны, введите другое имя файла: ";
		std::cin >> fname;
	}
	std::ifstream file(fname);
	time.ReadFile(file);
	file.close();
}

void Action(Time& time)
{
	int choice = 0;
	do
	{
		choice = ActionMenu();
		switch (choice)
		{
		case 1: // вычесть секунды
		{
			uint sec;
			ReadAndCheck(sec, "Введите количество секунд: ", 0, 85399);
			// с исключением
			/*try
			{
				time.SubtractSeconds(sec);
			}
			catch (std::exception ex)
			{
				std::cout << ex.what();
			}*/

			// без исключения
			time.SubtractSeconds(sec);
			break;
		}
		case 2: // добавить секунды
		{
			uint sec;
			ReadAndCheck(sec, "Введите количество секунд: ", 0, 85399);
			time.AddSeconds(sec);
			break;
		}
		case 3:
			std::cout << time.ToSeconds() << '\n';
			break;
		case 4:
			std::cout << time.ToMinutes() << '\n';
			break;
		case 5:
			ConsoleOutput(time);
			break;
		case 6:
		{
			FileOutput(time);
			break;
		}
		case 7:
			std::cout << time.ToString();
			break;
		}
	} while (choice != 0);
}

void ConsoleOutput(Time& time)
{
	time.Display();
}

void FileOutput(Time& time)
{
	std::cout << "Введите имя файла, в который хотите напечатать информацию: ";
	std::string fname;
	std::cin >> fname;
	std::ofstream file(fname.c_str());
	time.PrintFile(file);
	std::cout << "Информация напечатана в файл " << fname << '\n';
	file.close();
}
