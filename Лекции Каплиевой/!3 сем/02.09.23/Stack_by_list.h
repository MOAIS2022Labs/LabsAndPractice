// Стек - это такая организация данных (должны обеспечить требование к этой структуре данных), 
// при которой доступен только один элемент, называемый "вершиной стека". 
// Это так называемый ранжированный (упорядоченный) набор однотипных элементов. 
// Стек работает по принципо FILO (First in, last out), или же LIFO (Last in, first out).

// Задача по практике (для 9 группы):
/*
Дан текстовый файл, содержащий скобки трёх видов: "(), {}, []". 
Также могут содержаться цифры и символы латиницы.
Используя стек, проверить, сбалансирован ли текст по скобкам:
если какой-то вид скобки открывается, то он же и должен закрыться.
Пример: "ab(123)cd[]" - текст сбалансирован;
"cd[lol}qw" - текст не сбалансирован.

Для данной задачи придумать тесты.
*/


// Использовать в следующей задаче быструю сортировку Хоара. 
// Сортировать данную сортировку без рекурсии: использовать дополнительную память.
// На дне стека хранить структуру из двух элементов (pair).

#include <iostream>
#pragma once
using TInfo = int;

struct NODE
{
    TInfo info;
    NODE* next;
    NODE(TInfo info, NODE* ptr = nullptr): info(info), next(ptr) {}
    ~NODE()
    {
        next = nullptr;
    }
};

using ptrNODE = NODE*;

struct Stack
{
private:
    ptrNODE head;
    size_t count;
public:
    Stack();
    bool empty();
    size_t size();
    void push(TInfo elem);
    void pop();
    TInfo top();
    void view();
    void clear();
    ~Stack();
};
