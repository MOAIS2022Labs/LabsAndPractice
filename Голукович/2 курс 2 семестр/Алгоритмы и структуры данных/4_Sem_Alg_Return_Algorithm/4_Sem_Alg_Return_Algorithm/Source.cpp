#include <iostream>
#include <Windows.h>

// Лабиринт представлен матрицей
// Стены в лабиринте обозначены 1, проходы – 0. Найти
// все возможные варианты путей выхода из лабиринта без пересечений.

const int dx[4] = { -1, 1, 0, 0 };
const int dy[4] = { 0, 0, 1, -1 };


const int N = 7;
const int M = 7;
int a[N][M]

{
    1, 1, 1, 1, 1, 0, 1,
    0, 0, 0, 0, 1, 0, 1,
    1, 1, 1, 0, 0, 0, 0,
    1, 1, 0, 1, 0, 1, 1,
    0, 0, 0, 0, 0, 1, 1,
    1, 1, 0, 1, 0, 0, 0,
    1, 1, 0, 1, 1, 1, 1
};

void print_labyrinth()
{
    for (int i = 0; i < N; ++i)
    {
        for (int j = 0; j < M; ++j)
            std::cout << a[i][j] << ' ';
        std::cout << '\n';
    }
    std::cout << '\n';
}

// Производим поиск одного решения
bool Try(int m, int x, int y)
{
    bool result;
    int k = -1, u, v; // индекс варианта хода
    // u, v - варианты ходов
    do
    {
        result = false;
        ++k;
        u = x + dx[k];
        v = y + dy[k];

        // Если не вышли за пределы лабиринта и клетка ещё не посещена
        if (u >= 0 && u < N && v >= 0 && v < M && a[v][u] == 0)
        {
            a[v][u] = m;
            if (u != N - 1 && v != M - 1 && u != 0 && v != 0) // Если координата - не края лабиринта
            {
                result = Try(m, u, v); // мы посетили не все позиции, 
                // пытаемся идти дальше.
            }
            else
            {
                result = true;
                print_labyrinth();
                
            }// Нашли пустую клетку на краю - решение найдено
            a[v][u] = 0; // сделаем точку непосещённой - откат пока не найдем все решения
        }
    } while (k < 4); // Пока не исчерпали все возможные ходы (4)

    return result;
}

int main()
{
    SetConsoleOutputCP(1251);
    print_labyrinth();
    int x = 1, y = 1; // Стартовая позиция коня
    a[x][y] = 2;
    if (Try(2, x, y))
        print_labyrinth(); // Печать решения
    else
    {
        std::cout << "Скоро рассвет\n";
        std::cout << "Выхода нет\n";
        std::cout << "Ключ поверни\n";
        std::cout << "и полетели\n";
    }
    return 0;
}